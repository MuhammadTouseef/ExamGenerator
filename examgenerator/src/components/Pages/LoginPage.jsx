import React, { useState } from "react";
import { Link } from "react-router-dom";
import axios from "axios";
import { useNavigate } from "react-router-dom";
export const LoginPage = () => {
  let navigate = useNavigate();
  const [email, setemail] = useState("");
  const [password, setpassword] = useState("");
  const Subfr = async () => {
    let data = {
      email: email,
      password: password,
    };

    try {
      var res = await axios.post("/api/v1/auth/login", data);
      if (res.data["success"] === true) {
        localStorage.setItem("x-auth-token", res.data.token);
        navigate("dashboard");
      } else {
        alert(`Invalid Credentials \n ${res["error"]}`);
      }
    } catch (error) {
      alert("Invalid Credentials");
    }
  };
  const logn = () => {
    if (email === "" || password === "") {
      alert("Please Fill All Fields to proceed");
    } else {
      Subfr();
    }
  };
  return (
    <div className="loginpage f-center">
      <div className="loginform">
        <h1>EXAM GENERATOR</h1>

        <svg
          width="97"
          height="86"
          viewBox="0 0 97 86"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M97 0H0V86H97V0ZM56.5833 7.16667H28.2917C26.1478 7.16667 24.0918 7.92172 22.5759 9.26573C21.06 10.6097 20.2083 12.4326 20.2083 14.3333V71.6667C20.2083 73.5674 21.06 75.3903 22.5759 76.7343C24.0918 78.0783 26.1478 78.8333 28.2917 78.8333H68.7083C70.8522 78.8333 72.9082 78.0783 74.4241 76.7343C75.94 75.3903 76.7917 73.5674 76.7917 71.6667V26.875L56.5833 7.16667ZM30.3125 57.3333C29.7765 57.3333 29.2625 57.5221 28.8836 57.8581C28.5046 58.1941 28.2917 58.6498 28.2917 59.125C28.2917 59.6002 28.5046 60.0559 28.8836 60.3919C29.2625 60.7279 29.7765 60.9167 30.3125 60.9167H66.6875C67.2235 60.9167 67.7375 60.7279 68.1164 60.3919C68.4954 60.0559 68.7083 59.6002 68.7083 59.125C68.7083 58.6498 68.4954 58.1941 68.1164 57.8581C67.7375 57.5221 67.2235 57.3333 66.6875 57.3333H30.3125ZM28.2917 66.2917C28.2917 65.8165 28.5046 65.3608 28.8836 65.0248C29.2625 64.6888 29.7765 64.5 30.3125 64.5H54.5625C55.0985 64.5 55.6125 64.6888 55.9914 65.0248C56.3704 65.3608 56.5833 65.8165 56.5833 66.2917C56.5833 66.7668 56.3704 67.2226 55.9914 67.5586C55.6125 67.8946 55.0985 68.0833 54.5625 68.0833H30.3125C29.7765 68.0833 29.2625 67.8946 28.8836 67.5586C28.5046 67.2226 28.2917 66.7668 28.2917 66.2917ZM42.2819 27.9769C42.1284 27.6504 41.8694 27.3716 41.5375 27.1755C41.2055 26.9793 40.8156 26.8746 40.4167 26.8746C40.0178 26.8746 39.6278 26.9793 39.2959 27.1755C38.964 27.3716 38.7049 27.6504 38.5514 27.9769L30.9895 44.066C30.9774 44.0909 30.966 44.116 30.9551 44.1413L28.4473 49.4769C28.2409 49.9155 28.2395 50.4088 28.4434 50.8483C28.6473 51.2877 29.0398 51.6374 29.5345 51.8204C30.0292 52.0033 30.5856 52.0045 31.0813 51.8238C31.577 51.643 31.9714 51.295 32.1777 50.8565L34.1864 46.5833H46.6469L48.6556 50.8565C48.8619 51.295 49.2564 51.643 49.7521 51.8238C50.2478 52.0045 50.8042 52.0033 51.2989 51.8204C51.7935 51.6374 52.186 51.2877 52.3899 50.8483C52.5938 50.4088 52.5924 49.9155 52.3861 49.4769L49.8782 44.1413C49.8674 44.116 49.8559 44.0909 49.8439 44.066L42.2819 27.9769ZM40.4167 33.325L44.9635 43H35.8698L40.4167 33.325ZM60.625 37.625C61.161 37.625 61.675 37.8138 62.0539 38.1498C62.4329 38.4858 62.6458 38.9415 62.6458 39.4167V43H66.6875C67.2235 43 67.7375 43.1888 68.1164 43.5248C68.4954 43.8608 68.7083 44.3165 68.7083 44.7917C68.7083 45.2668 68.4954 45.7226 68.1164 46.0586C67.7375 46.3946 67.2235 46.5833 66.6875 46.5833H62.6458V50.1667C62.6458 50.6418 62.4329 51.0976 62.0539 51.4336C61.675 51.7696 61.161 51.9583 60.625 51.9583C60.089 51.9583 59.575 51.7696 59.1961 51.4336C58.8171 51.0976 58.6042 50.6418 58.6042 50.1667V46.5833H54.5625C54.0265 46.5833 53.5125 46.3946 53.1336 46.0586C52.7546 45.7226 52.5417 45.2668 52.5417 44.7917C52.5417 44.3165 52.7546 43.8608 53.1336 43.5248C53.5125 43.1888 54.0265 43 54.5625 43H58.6042V39.4167C58.6042 38.9415 58.8171 38.4858 59.1961 38.1498C59.575 37.8138 60.089 37.625 60.625 37.625ZM56.5833 12.5417L70.7292 26.875H58.6042C58.0682 26.875 57.5542 26.6862 57.1752 26.3502C56.7962 26.0142 56.5833 25.5585 56.5833 25.0833V12.5417Z"
            fill="black"
          />
        </svg>

        <input
          type="text"
          placeholder="Email"
          className="fofe"
          onChange={(e) => setemail(e.target.value)}
        />
        <input
          type="password"
          placeholder="Password"
          className="fofe"
          onChange={(e) => setpassword(e.target.value)}
        />
        <Link to="/">Forget Password?</Link>

        <button className="logbtn" onClick={logn}>
          Login
        </button>
        <Link to="/register">Don't have a account?</Link>
        <hr />
      </div>
    </div>
  );
};
